pipeline {
  agent {
    kubernetes {
      yaml '''
        apiVersion: v1 
        kind: Pod 
        metadata: 
            name: dind 
        spec: 
            containers: 
              - name: dind-daemon 
                image: docker:1.12.6-dind 
                securityContext: 
                    privileged: true 
                volumeMounts: 
                  - name: docker-graph-storage 
                    mountPath: /var/lib/docker 
            volumes: 
              - name: docker-graph-storage 
                emptyDir: {}
      '''
    }
  }
  
  stages {
    // stage('Git Clone') {
    //     steps {
    //         git branch: 'main', credentialsId: 'bitbucket', url: 'git@github.com:Jumia/DevOps-Challenge.git'
    //     }
    // }
    stage('Setup environment') {
      steps {
        // load("$JENKINS_HOME/env/validator-dev.groovy")

        script {
          env.CACHE_MODE = "" // or --no-cache
          env.GIT_SHA = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()
        }                
      }
    }

    stage('Build app') {
      agent { label 'jdk8-build' }
      steps {
        script {
          env.BUILD_MODE = "development"
          // env.REPO = "jumia_phone_validator"
          git branch: 'main', credentialsId: 'e7c50e69-131e-4beb-a109-152efd32effc', url: 'git@github.com:krateria/DevOps-Challenge.git'
          dir("jumia_phone_validator/validator-backend") {
            sh "mvn clean install"

            stash name: "build-stash", includes: "target/**"
          }
        }
      }
    }

    stage('Build docker image') {
      steps {
        container(name: 'dind-daemon') {
          script {
            env.REPO = "992122884453.dkr.ecr.eu-west-1.amazonaws.com"
            env.DOCKER_IMAGE_NAME = "${env.REPO}/jumia-phone-validator-back"

            git branch: 'main', credentialsId: 'e7c50e69-131e-4beb-a109-152efd32effc', url: 'git@github.com:krateria/DevOps-Challenge.git'

            dir("jumia_phone_validator/validator-backend") {
              unstash "build-stash"

              app = docker.build('jumia-phone-validator-back')
              docker.withRegistry("https://${env.REPO}", 'ecr:eu-west-1:ecrkey') {
                app.push(String.valueOf(env.GIT_SHA).trim())
              }
            }
          
            build wait: false, job: 'update-argocd', parameters: [
              string(name: 'GIT_SHA', value: String.valueOf(env.GIT_SHA).trim()),
              string(name: 'REPO', value: 'validator-back'),
              string(name: 'IMAGE', value: "jumia-phone-validator-back:${env.GIT_SHA}")
              ]
          }
        }
      }
    }
  }
}